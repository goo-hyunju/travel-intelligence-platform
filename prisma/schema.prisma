//
// 1. 파일 경로: prisma/schema.prisma (수정)
// 설명: 실시간 데이터를 저장하기 위한 RealtimeData 모델을 다시 추가하고, Destination 모델과 연결합니다.
//
generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Destination {
  id     String @id
  name   String
  nameEn String? @map("name_en")

  summary         String? @db.Text
  recommendation  String? @db.Text
  flightTime      String? @map("flight_time")

  scores          Json?
  weather         Json?
  flight          Json?
  expenses        Json?
  activities      String[]
  accommodations  String[]
  
  // [추가] Destination과 RealtimeData를 1:1 관계로 연결합니다.
  realtimeData RealtimeData?
  
  @@map("destinations")
}

// [신규] 크롤링한 데이터를 저장할 모델을 다시 추가합니다.
model RealtimeData {
  id                   String      @id @default(cuid())
  destinationId        String      @unique @map("destination_id")
  destination          Destination @relation(fields: [destinationId], references: [id])
  
  currentFlightPrice   Int?        @map("current_flight_price")
  currentFlightTime    String?     @map("current_flight_time")
  lastScrapedAt        DateTime    @updatedAt @map("last_scraped_at")

  @@map("realtime_data")
}
